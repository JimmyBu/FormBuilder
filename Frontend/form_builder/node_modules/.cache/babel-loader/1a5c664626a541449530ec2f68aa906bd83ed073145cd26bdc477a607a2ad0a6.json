{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFields = [{\n  id: \"field-1\",\n  label: \"Text Input\",\n  type: \"text\",\n  placeholder: \"Enter text\",\n  required: false\n}, {\n  id: \"field-2\",\n  label: \"Textarea\",\n  type: \"textarea\",\n  placeholder: \"Enter your message\",\n  required: false\n}, {\n  id: \"field-3\",\n  label: \"Select Dropdown\",\n  type: \"select\",\n  options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n  required: false\n}, {\n  id: \"field-4\",\n  label: \"Checkbox\",\n  type: \"checkbox\",\n  required: false\n}, {\n  id: \"field-5\",\n  label: \"Radio Button\",\n  type: \"radio\",\n  options: [\"Option A\", \"Option B\"],\n  required: false\n}, {\n  id: \"field-6\",\n  label: \"Date Picker\",\n  type: \"date\",\n  required: false\n}, {\n  id: \"field-7\",\n  label: \"File Upload\",\n  type: \"file\",\n  required: false\n}];\nconst FormBuilder = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedFieldId, setSelectedFieldId] = useState(null); // Track selected field by ID\n  const inputRefs = useRef({}); // Store references to input elements by field ID\n\n  // Focus the selected field whenever selectedFieldId changes\n  useEffect(() => {\n    if (selectedFieldId && inputRefs.current[selectedFieldId]) {\n      inputRefs.current[selectedFieldId].focus(); // Focus on the selected field by ID\n    }\n  }, [selectedFieldId]);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}` // Generate a unique ID for the field\n      };\n      setContainerFields(prev => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n\n      // If the removed field is currently selected, deselect it\n      const removedField = containerFields[source.index];\n      if (selectedFieldId && selectedFieldId === removedField.id) {\n        setSelectedFieldId(null);\n      }\n    }\n  };\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = fieldsList => fieldsList.map(field => field.id === id ? {\n      ...field,\n      [key]: key === \"required\" ? !field.required : value\n    } : field);\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedFieldId(prev => prev === id ? {\n      ...prev,\n      [key]: value\n    } : prev);\n  };\n  const FieldEditor = ({\n    field\n  }) => {\n    _s();\n    if (!field) return null; // Add a check to ensure field exists before rendering\n\n    const [localField, setLocalField] = useState(field);\n    const handleLocalChange = (key, value) => {\n      setLocalField(prev => ({\n        ...prev,\n        [key]: value\n      }));\n      handleFieldUpdate(field.id, key, value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: localField.label,\n          onChange: e => handleLocalChange(\"label\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), localField.type === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"textarea\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"select\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"radio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Required:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: localField.required,\n          onChange: () => handleLocalChange(\"required\", !localField.required)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  };\n  _s(FieldEditor, \"5sictikcNsYA25ygiNgWUkf0KXk=\");\n  const renderField = field => {\n    switch (field.type) {\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: field.placeholder,\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el // Save reference by field ID\n          ,\n          style: {\n            minWidth: \"200px\",\n            marginBottom: \"10px\"\n          },\n          onClick: () => setSelectedFieldId(field.id) // Set the selected field by ID (no focus here)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this);\n      case \"textarea\":\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: field.placeholder,\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el // Save reference by field ID\n          ,\n          style: {\n            minWidth: \"200px\",\n            minHeight: \"100px\",\n            marginBottom: \"10px\"\n          },\n          onClick: () => setSelectedFieldId(field.id) // Set the selected field by ID (no focus here)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this);\n      case \"select\":\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el,\n          onClick: () => setSelectedFieldId(field.id),\n          children: field.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this);\n      case \"checkbox\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el,\n          onClick: () => setSelectedFieldId(field.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 16\n        }, this);\n      case \"radio\":\n        return field.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: field.id,\n            required: field.required,\n            ref: el => inputRefs.current[field.id] = el,\n            onClick: () => setSelectedFieldId(field.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), option]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this));\n      case \"date\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el,\n          onClick: () => setSelectedFieldId(field.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 16\n        }, this);\n      case \"file\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el,\n          onClick: () => setSelectedFieldId(field.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const renderFields = () => {\n    return containerFields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: field.id,\n      index: index,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        style: {\n          ...provided.draggableProps.style,\n          margin: \"5px 0\",\n          border: \"1px solid #ddd\",\n          padding: \"10px\"\n        },\n        onClick: () => setSelectedFieldId(field.id) // Set the selected field by ID\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), renderField(field)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"container\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            padding: \"20px\",\n            minHeight: \"300px\"\n          },\n          children: [renderFields(), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), selectedFieldId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FieldEditor, {\n        field: containerFields.find(f => f.id === selectedFieldId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormBuilder, \"c9YzGnWu5c+q6RHa45HC04qbeQg=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFields","id","label","type","placeholder","required","options","FormBuilder","_s2","_s","$RefreshSig$","fields","setFields","containerFields","setContainerFields","selectedFieldId","setSelectedFieldId","inputRefs","current","focus","onDragEnd","result","source","destination","droppableId","draggedField","index","newField","Date","now","prev","reorderedFields","Array","from","moved","splice","updatedContainerFields","removedField","handleFieldUpdate","key","value","updateFields","fieldsList","map","field","FieldEditor","localField","setLocalField","handleLocalChange","style","border","padding","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","join","split","opt","trim","checked","renderField","ref","el","minWidth","marginBottom","onClick","minHeight","option","idx","name","renderFields","draggableId","provided","innerRef","draggableProps","dragHandleProps","margin","droppableProps","find","f","_c","$RefreshReg$"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\n\nconst initialFields = [\n  { id: \"field-1\", label: \"Text Input\", type: \"text\", placeholder: \"Enter text\", required: false },\n  { id: \"field-2\", label: \"Textarea\", type: \"textarea\", placeholder: \"Enter your message\", required: false },\n  { \n    id: \"field-3\", \n    label: \"Select Dropdown\", \n    type: \"select\", \n    options: [\"Option 1\", \"Option 2\", \"Option 3\"], \n    required: false \n  },\n  { id: \"field-4\", label: \"Checkbox\", type: \"checkbox\", required: false },\n  { id: \"field-5\", label: \"Radio Button\", type: \"radio\", options: [\"Option A\", \"Option B\"], required: false },\n  { id: \"field-6\", label: \"Date Picker\", type: \"date\", required: false },\n  { id: \"field-7\", label: \"File Upload\", type: \"file\", required: false },\n];\n\nconst FormBuilder = () => {\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedFieldId, setSelectedFieldId] = useState(null);  // Track selected field by ID\n  const inputRefs = useRef({});  // Store references to input elements by field ID\n\n  // Focus the selected field whenever selectedFieldId changes\n  useEffect(() => {\n    if (selectedFieldId && inputRefs.current[selectedFieldId]) {\n      inputRefs.current[selectedFieldId].focus();  // Focus on the selected field by ID\n    }\n  }, [selectedFieldId]);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`, // Generate a unique ID for the field\n      };\n      setContainerFields((prev) => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n\n      // If the removed field is currently selected, deselect it\n      const removedField = containerFields[source.index];\n      if (selectedFieldId && selectedFieldId === removedField.id) {\n        setSelectedFieldId(null);\n      }\n    }\n  };\n\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = (fieldsList) =>\n      fieldsList.map((field) =>\n        field.id === id ? { ...field, [key]: key === \"required\" ? !field.required : value } : field\n      );\n\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedFieldId((prev) => (prev === id ? { ...prev, [key]: value } : prev));\n  };\n\n  const FieldEditor = ({ field }) => {\n    if (!field) return null; // Add a check to ensure field exists before rendering\n\n    const [localField, setLocalField] = useState(field);\n\n    const handleLocalChange = (key, value) => {\n      setLocalField((prev) => ({ ...prev, [key]: value }));\n      handleFieldUpdate(field.id, key, value);\n    };\n\n    return (\n      <div style={{ border: \"1px solid #ddd\", padding: \"10px\", marginTop: \"10px\" }}>\n        <h4>Edit Field</h4>\n        <label>\n          Label:\n          <input\n            type=\"text\"\n            value={localField.label}\n            onChange={(e) => handleLocalChange(\"label\", e.target.value)}\n          />\n        </label>\n        <br />\n        {localField.type === \"text\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"textarea\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"select\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"radio\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        <label>\n          Required:\n          <input\n            type=\"checkbox\"\n            checked={localField.required}\n            onChange={() => handleLocalChange(\"required\", !localField.required)}\n          />\n        </label>\n      </div>\n    );\n  };\n\n  const renderField = (field) => {\n    switch (field.type) {\n      case \"text\":\n        return (\n          <input\n            type=\"text\"\n            placeholder={field.placeholder}\n            required={field.required}\n            ref={(el) => (inputRefs.current[field.id] = el)} // Save reference by field ID\n            style={{ minWidth: \"200px\", marginBottom: \"10px\" }}\n            onClick={() => setSelectedFieldId(field.id)} // Set the selected field by ID (no focus here)\n          />\n        );\n      case \"textarea\":\n        return (\n          <textarea\n            placeholder={field.placeholder}\n            required={field.required}\n            ref={(el) => (inputRefs.current[field.id] = el)} // Save reference by field ID\n            style={{ minWidth: \"200px\", minHeight: \"100px\", marginBottom: \"10px\" }}\n            onClick={() => setSelectedFieldId(field.id)} // Set the selected field by ID (no focus here)\n          />\n        );\n      case \"select\":\n        return (\n          <select required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedFieldId(field.id)}>\n            {field.options.map((option, idx) => (\n              <option key={idx} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        );\n      case \"checkbox\":\n        return <input type=\"checkbox\" required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedFieldId(field.id)} />;\n      case \"radio\":\n        return field.options.map((option, idx) => (\n          <label key={idx}>\n            <input type=\"radio\" name={field.id} required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedFieldId(field.id)} />\n            {option}\n          </label>\n        ));\n      case \"date\":\n        return <input type=\"date\" required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedFieldId(field.id)} />;\n      case \"file\":\n        return <input type=\"file\" required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedFieldId(field.id)} />;\n      default:\n        return null;\n    }\n  };\n\n  const renderFields = () => {\n    return containerFields.map((field, index) => (\n      <Draggable key={field.id} draggableId={field.id} index={index}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={{ ...provided.draggableProps.style, margin: \"5px 0\", border: \"1px solid #ddd\", padding: \"10px\" }}\n            onClick={() => setSelectedFieldId(field.id)} // Set the selected field by ID\n          >\n            <label>{field.label}</label>\n            {renderField(field)}\n          </div>\n        )}\n      </Draggable>\n    ));\n  };\n\n  return (\n    <div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"container\">\n          {(provided) => (\n            <div ref={provided.innerRef} {...provided.droppableProps} style={{ padding: \"20px\", minHeight: \"300px\" }}>\n              {renderFields()}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      {selectedFieldId && (\n        <div>\n          <FieldEditor field={containerFields.find((f) => f.id === selectedFieldId)} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}