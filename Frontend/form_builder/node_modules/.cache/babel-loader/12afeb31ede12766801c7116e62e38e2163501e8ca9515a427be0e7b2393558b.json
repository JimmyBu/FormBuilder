{"ast":null,"code":"import axios from 'axios';\n\n// Fetch a specific form by ID\nexport const fetchForm = async id => {\n  try {\n    const response = await axios.get(`/forms/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching form:\", error);\n    throw error;\n  }\n};\n\n// Update a form by ID\nexport const updateForm = async (id, formData) => {\n  try {\n    const response = await axios.put(`/forms/update/${id}`, formData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating form:\", error);\n    throw error;\n  }\n};\n\n// Fetch all forms\nexport const fetchAllForms = async () => {\n  try {\n    const response = await axios.get('/forms/list');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching all forms:\", error);\n    throw error;\n  }\n};\n\n// Save a new form\nexport const saveForm = async formData => {\n  try {\n    const response = await axios.post('/forms/save', formData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving form:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","fetchForm","id","response","get","data","error","console","updateForm","formData","put","headers","fetchAllForms","saveForm","post"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Fetch a specific form by ID\nexport const fetchForm = async (id) => {\n  try {\n    const response = await axios.get(`/forms/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching form:\", error);\n    throw error;\n  }\n};\n\n// Update a form by ID\nexport const updateForm = async (id, formData) => {\n  try {\n    const response = await axios.put(`/forms/update/${id}`, formData, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating form:\", error);\n    throw error;\n  }\n};\n\n// Fetch all forms\nexport const fetchAllForms = async () => {\n  try {\n    const response = await axios.get('/forms/list');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching all forms:\", error);\n    throw error;\n  }\n};\n\n// Save a new form\nexport const saveForm = async (formData) => {\n  try {\n    const response = await axios.post('/forms/save', formData, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving form:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,EAAE,IAAK;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,UAAUF,EAAE,EAAE,CAAC;IAChD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAON,EAAE,EAAEO,QAAQ,KAAK;EAChD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,iBAAiBR,EAAE,EAAE,EAAEO,QAAQ,EAAE;MAChEE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,aAAa,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,QAAQ,GAAG,MAAOJ,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACc,IAAI,CAAC,aAAa,EAAEL,QAAQ,EAAE;MACzDE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}