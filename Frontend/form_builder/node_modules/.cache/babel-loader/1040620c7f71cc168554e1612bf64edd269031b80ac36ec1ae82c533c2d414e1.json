{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFields = [{\n  id: \"field-1\",\n  label: \"Text Input\",\n  type: \"text\",\n  placeholder: \"Enter text\",\n  required: false\n}, {\n  id: \"field-2\",\n  label: \"Textarea\",\n  type: \"textarea\",\n  placeholder: \"Enter your message\",\n  required: false\n}, {\n  id: \"field-3\",\n  label: \"Select Dropdown\",\n  type: \"select\",\n  options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n  required: false\n}, {\n  id: \"field-4\",\n  label: \"Checkbox\",\n  type: \"checkbox\",\n  options: [\"Option 1\"],\n  required: false\n}, {\n  id: \"field-5\",\n  label: \"Radio Buttons\",\n  type: \"radio\",\n  options: [\"Option 1\"],\n  selectedOption: \"Option 1\",\n  required: false\n}, {\n  id: \"field-6\",\n  label: \"Date Picker\",\n  type: \"date\",\n  required: false\n}, {\n  id: \"field-7\",\n  label: \"File Upload\",\n  type: \"file\",\n  required: false\n}];\nconst FormBuilder = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const inputRefs = useRef({});\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`\n      };\n      setContainerFields(prev => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n    }\n  };\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = fieldsList => fieldsList.map(field => field.id === id ? {\n      ...field,\n      [key]: key === \"required\" ? !field.required : value\n    } : field);\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === id ? {\n      ...prev,\n      [key]: value\n    } : prev);\n  };\n  const FieldEditor = ({\n    field\n  }) => {\n    _s();\n    var _localField$options, _localField$options2;\n    const [localField, setLocalField] = useState(field);\n    useEffect(() => {\n      if (!localField.options) {\n        setLocalField(prev => ({\n          ...prev,\n          options: [],\n          selectedOptions: []\n        }));\n      }\n    }, [localField]);\n    const handleLocalChange = (key, value) => {\n      setLocalField(prev => ({\n        ...prev,\n        [key]: value\n      }));\n      handleFieldUpdate(field.id, key, value);\n    };\n    const addOption = () => {\n      setLocalField(prev => {\n        const newOptions = [...prev.options, `Option ${prev.options.length + 1}`];\n        handleFieldUpdate(field.id, \"options\", newOptions);\n        return {\n          ...prev,\n          options: newOptions\n        };\n      });\n    };\n    const removeOption = index => {\n      setLocalField(prev => {\n        const newOptions = prev.options.filter((_, idx) => idx !== index);\n        handleFieldUpdate(field.id, \"options\", newOptions);\n        return {\n          ...prev,\n          options: newOptions\n        };\n      });\n    };\n    const handleCheckboxChange = option => {\n      const newSelected = localField.selectedOptions.includes(option) ? localField.selectedOptions.filter(opt => opt !== option) : [...localField.selectedOptions, option];\n      handleFieldUpdate(field.id, \"selectedOptions\", newSelected);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: localField.label,\n          onChange: e => handleLocalChange(\"label\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), localField.type === \"radio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [localField.label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"15px\",\n            marginTop: \"10px\"\n          },\n          children: (_localField$options = localField.options) === null || _localField$options === void 0 ? void 0 : _localField$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: localField.id // Ensures the radio buttons belong to the same group\n              ,\n              value: option,\n              checked: localField.selectedOption === option // Check the selected option\n              ,\n              onChange: () => handleLocalChange(\"selectedOption\", option) // Update selected option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option,\n              onChange: e => handleLocalChange(\"options\", localField.options.map((opt, i) => i === index ? e.target.value : opt)),\n              style: {\n                marginLeft: \"10px\",\n                padding: \"5px\",\n                fontSize: \"14px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeOption(index),\n              style: {\n                marginLeft: \"10px\"\n              },\n              children: \"Remove Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addOption,\n          style: {\n            marginTop: \"10px\"\n          },\n          children: \"Add Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"checkbox\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [localField.label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"15px\",\n            marginTop: \"10px\"\n          },\n          children: (_localField$options2 = localField.options) === null || _localField$options2 === void 0 ? void 0 : _localField$options2.map((option, index) => {\n            var _localField$selectedO;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: (_localField$selectedO = localField.selectedOptions) === null || _localField$selectedO === void 0 ? void 0 : _localField$selectedO.includes(option) // Check if option is selected\n                ,\n                onChange: () => handleCheckboxChange(option) // Toggle option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: option,\n                onChange: e => handleLocalChange(\"options\", localField.options.map((opt, i) => i === index ? e.target.value : opt)),\n                style: {\n                  marginLeft: \"10px\",\n                  padding: \"5px\",\n                  fontSize: \"14px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeOption(index),\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: \"Remove Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addOption,\n          style: {\n            marginTop: \"10px\"\n          },\n          children: \"Add Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Required:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: localField.required,\n          onChange: () => handleLocalChange(\"required\", !localField.required)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n  _s(FieldEditor, \"kzxUirrltLRTEJmxK2GBUb38vBY=\");\n  const FloatingLabelField = /*#__PURE__*/React.forwardRef(({\n    field,\n    onClick\n  }, ref) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        id: field.id,\n        type: field.type,\n        placeholder: field.placeholder,\n        required: field.required,\n        maxLength: field.maxLength,\n        minLength: field.minLength,\n        onClick: onClick,\n        className: \"input-field\",\n        style: {\n          padding: \"10px\",\n          width: \"100%\",\n          minWidth: \"200px\",\n          transition: \"all 0.2s\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field.id,\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"10px\",\n          fontSize: \"16px\",\n          transition: \"all 0.2s\",\n          transform: \"translateY(-20px)\",\n          pointerEvents: \"none\",\n          opacity: field.value || field.placeholder ? \"0.7\" : \"1\"\n        },\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"fields\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          style: {\n            padding: \"10px\",\n            backgroundColor: \"#f4f4f4\",\n            borderRadius: \"5px\"\n          },\n          ...provided.droppableProps,\n          children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: field.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                ...provided.draggableProps.style,\n                border: \"1px solid #ddd\",\n                padding: \"10px\",\n                marginBottom: \"10px\",\n                backgroundColor: \"#fff\",\n                borderRadius: \"5px\"\n              },\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(FieldEditor, {\n      field: selectedField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormBuilder, \"NGGO58PNXYX0+oYBmpL3Z/S3F4c=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFields","id","label","type","placeholder","required","options","selectedOption","FormBuilder","_s2","_s","$RefreshSig$","fields","setFields","containerFields","setContainerFields","selectedField","setSelectedField","inputRefs","onDragEnd","result","source","destination","droppableId","draggedField","index","newField","Date","now","prev","reorderedFields","Array","from","moved","splice","updatedContainerFields","handleFieldUpdate","key","value","updateFields","fieldsList","map","field","FieldEditor","_localField$options","_localField$options2","localField","setLocalField","selectedOptions","handleLocalChange","addOption","newOptions","length","removeOption","filter","_","idx","handleCheckboxChange","option","newSelected","includes","opt","style","border","padding","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","display","gap","alignItems","name","checked","i","marginLeft","fontSize","onClick","_localField$selectedO","FloatingLabelField","forwardRef","ref","position","marginBottom","maxLength","minLength","className","width","minWidth","transition","borderRadius","htmlFor","top","left","transform","pointerEvents","opacity","provided","innerRef","backgroundColor","droppableProps","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport axios from \"axios\";\n\nconst initialFields = [\n  { id: \"field-1\", label: \"Text Input\", type: \"text\", placeholder: \"Enter text\", required: false },\n  { id: \"field-2\", label: \"Textarea\", type: \"textarea\", placeholder: \"Enter your message\", required: false },\n  { \n    id: \"field-3\", \n    label: \"Select Dropdown\", \n    type: \"select\", \n    options: [\"Option 1\", \"Option 2\", \"Option 3\"], \n    required: false \n  },\n  { id: \"field-4\", label: \"Checkbox\", type: \"checkbox\", options: [\"Option 1\"], required: false },\n  { id: \"field-5\", label: \"Radio Buttons\", type: \"radio\", options: [\"Option 1\"], selectedOption: \"Option 1\", required: false },\n  { id: \"field-6\", label: \"Date Picker\", type: \"date\", required: false },\n  { id: \"field-7\", label: \"File Upload\", type: \"file\", required: false },\n];\n\nconst FormBuilder = () => {\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n\n  const inputRefs = useRef({});\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`,\n      };\n      setContainerFields((prev) => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n    }\n  };\n\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = (fieldsList) =>\n      fieldsList.map((field) =>\n        field.id === id ? { ...field, [key]: key === \"required\" ? !field.required : value } : field\n      );\n\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField((prev) => (prev?.id === id ? { ...prev, [key]: value } : prev));\n  };\n\n  const FieldEditor = ({ field }) => {\n    const [localField, setLocalField] = useState(field);\n  \n    useEffect(() => {\n      if (!localField.options) {\n        setLocalField((prev) => ({\n          ...prev,\n          options: [],\n          selectedOptions: [],\n        }));\n      }\n    }, [localField]);\n  \n    const handleLocalChange = (key, value) => {\n      setLocalField((prev) => ({ ...prev, [key]: value }));\n      handleFieldUpdate(field.id, key, value);\n    };\n  \n    const addOption = () => {\n      setLocalField((prev) => {\n        const newOptions = [...prev.options, `Option ${prev.options.length + 1}`];\n        handleFieldUpdate(field.id, \"options\", newOptions);\n        return { ...prev, options: newOptions };\n      });\n    };\n  \n    const removeOption = (index) => {\n      setLocalField((prev) => {\n        const newOptions = prev.options.filter((_, idx) => idx !== index);\n        handleFieldUpdate(field.id, \"options\", newOptions);\n        return { ...prev, options: newOptions };\n      });\n    };\n  \n    const handleCheckboxChange = (option) => {\n      const newSelected = localField.selectedOptions.includes(option)\n        ? localField.selectedOptions.filter((opt) => opt !== option)\n        : [...localField.selectedOptions, option];\n  \n      handleFieldUpdate(field.id, \"selectedOptions\", newSelected);\n    };\n  \n    return (\n      <div style={{ border: \"1px solid #ddd\", padding: \"10px\", marginTop: \"10px\" }}>\n        <h4>Edit Field</h4>\n        <label>\n          Label:\n          <input\n            type=\"text\"\n            value={localField.label}\n            onChange={(e) => handleLocalChange(\"label\", e.target.value)}\n          />\n        </label>\n        <br />\n        {localField.type === \"radio\" && (\n          <>\n            <label>{localField.label}:</label>\n            <div style={{ display: \"flex\", gap: \"15px\", marginTop: \"10px\" }}>\n              {localField.options?.map((option, index) => (\n                <div key={index} style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <input\n                    type=\"radio\"\n                    name={localField.id} // Ensures the radio buttons belong to the same group\n                    value={option}\n                    checked={localField.selectedOption === option} // Check the selected option\n                    onChange={() => handleLocalChange(\"selectedOption\", option)} // Update selected option\n                  />\n                  <input\n                    type=\"text\"\n                    value={option}\n                    onChange={(e) =>\n                      handleLocalChange(\n                        \"options\",\n                        localField.options.map((opt, i) =>\n                          i === index ? e.target.value : opt\n                        )\n                      )\n                    }\n                    style={{ marginLeft: \"10px\", padding: \"5px\", fontSize: \"14px\" }}\n                  />\n                  <button type=\"button\" onClick={() => removeOption(index)} style={{ marginLeft: \"10px\" }}>\n                    Remove Option\n                  </button>\n                </div>\n              ))}\n            </div>\n            <button type=\"button\" onClick={addOption} style={{ marginTop: \"10px\" }}>\n              Add Option\n            </button>\n          </>\n        )}\n        {localField.type === \"checkbox\" && (\n          <>\n            <label>{localField.label}:</label>\n            <div style={{ display: \"flex\", gap: \"15px\", marginTop: \"10px\" }}>\n              {localField.options?.map((option, index) => (\n                <div key={index} style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <input\n                    type=\"checkbox\"\n                    checked={localField.selectedOptions?.includes(option)} // Check if option is selected\n                    onChange={() => handleCheckboxChange(option)} // Toggle option\n                  />\n                  <input\n                    type=\"text\"\n                    value={option}\n                    onChange={(e) =>\n                      handleLocalChange(\n                        \"options\",\n                        localField.options.map((opt, i) => (i === index ? e.target.value : opt))\n                      )\n                    }\n                    style={{ marginLeft: \"10px\", padding: \"5px\", fontSize: \"14px\" }}\n                  />\n                  <button type=\"button\" onClick={() => removeOption(index)} style={{ marginLeft: \"10px\" }}>\n                    Remove Option\n                  </button>\n                </div>\n              ))}\n            </div>\n            <button type=\"button\" onClick={addOption} style={{ marginTop: \"10px\" }}>\n              Add Option\n            </button>\n          </>\n        )}\n        <br />\n        <label>\n          Required:\n          <input\n            type=\"checkbox\"\n            checked={localField.required}\n            onChange={() => handleLocalChange(\"required\", !localField.required)}\n          />\n        </label>\n      </div>\n    );\n  };\n  \n\n  const FloatingLabelField = React.forwardRef(({ field, onClick }, ref) => {\n    return (\n      <div style={{ position: \"relative\", marginBottom: \"20px\" }}>\n        <input\n          ref={ref}\n          id={field.id}\n          type={field.type}\n          placeholder={field.placeholder}\n          required={field.required}\n          maxLength={field.maxLength}\n          minLength={field.minLength}\n          onClick={onClick}\n          className=\"input-field\"\n          style={{\n            padding: \"10px\",\n            width: \"100%\",\n            minWidth: \"200px\",\n            transition: \"all 0.2s\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            fontSize: \"16px\",\n          }}\n        />\n        <label\n          htmlFor={field.id}\n          style={{\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            fontSize: \"16px\",\n            transition: \"all 0.2s\",\n            transform: \"translateY(-20px)\",\n            pointerEvents: \"none\",\n            opacity: field.value || field.placeholder ? \"0.7\" : \"1\",\n          }}\n        >\n          {field.label}\n        </label>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h2>Form Builder</h2>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"fields\">\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              style={{ padding: \"10px\", backgroundColor: \"#f4f4f4\", borderRadius: \"5px\" }}\n              {...provided.droppableProps}\n            >\n              {fields.map((field, index) => (\n                <Draggable key={field.id} draggableId={field.id} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        ...provided.draggableProps.style,\n                        border: \"1px solid #ddd\",\n                        padding: \"10px\",\n                        marginBottom: \"10px\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {field.label}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      {selectedField && <FieldEditor field={selectedField} />}\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}