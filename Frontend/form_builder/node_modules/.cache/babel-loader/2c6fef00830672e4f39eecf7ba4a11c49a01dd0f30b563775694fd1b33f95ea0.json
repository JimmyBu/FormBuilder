{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/FormBuilder/Frontend/form_builder/src/FieldEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FieldEditor = ({\n  field\n}) => {\n  _s();\n  const [localField, setLocalField] = useState(field);\n  const handleLocalChange = (key, value) => {\n    setLocalField(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    // Handle field update logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Edit Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: localField.label,\n        onChange: e => handleLocalChange(\"label\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), localField.type === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: localField.placeholder,\n          onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(FieldEditor, \"5sictikcNsYA25ygiNgWUkf0KXk=\");\n_c = FieldEditor;\nvar _c;\n$RefreshReg$(_c, \"FieldEditor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FieldEditor","field","_s","localField","setLocalField","handleLocalChange","key","value","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","type","label","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/FieldEditor.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport const FieldEditor = ({ field }) => {\n  const [localField, setLocalField] = useState(field);\n\n  const handleLocalChange = (key, value) => {\n    setLocalField((prev) => ({ ...prev, [key]: value }));\n    // Handle field update logic\n  };\n\n  return (\n    <div>\n      <h4>Edit Field</h4>\n      <label>\n        Label:\n        <input\n          type=\"text\"\n          value={localField.label}\n          onChange={(e) => handleLocalChange(\"label\", e.target.value)}\n        />\n      </label>\n      <br />\n      {localField.type === \"text\" && (\n        <>\n          <label>\n            Placeholder:\n            <input\n              type=\"text\"\n              value={localField.placeholder}\n              onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n            />\n          </label>\n          <br />\n          {/* Other fields specific to text */}\n        </>\n      )}\n      {/* Other input fields */}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAACM,KAAK,CAAC;EAEnD,MAAMI,iBAAiB,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IACxCH,aAAa,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,GAAG,GAAGC;IAAM,CAAC,CAAC,CAAC;IACpD;EACF,CAAC;EAED,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA;MAAAY,QAAA,GAAO,QAEL,eAAAZ,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXP,KAAK,EAAEJ,UAAU,CAACY,KAAM;QACxBC,QAAQ,EAAGC,CAAC,IAAKZ,iBAAiB,CAAC,OAAO,EAAEY,CAAC,CAACC,MAAM,CAACX,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLV,UAAU,CAACW,IAAI,KAAK,MAAM,iBACzBjB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA;QAAAY,QAAA,GAAO,cAEL,eAAAZ,OAAA;UACEiB,IAAI,EAAC,MAAM;UACXP,KAAK,EAAEJ,UAAU,CAACgB,WAAY;UAC9BH,QAAQ,EAAGC,CAAC,IAAKZ,iBAAiB,CAAC,aAAa,EAAEY,CAAC,CAACC,MAAM,CAACX,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRhB,OAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAEN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV,CAAC;AAACX,EAAA,CArCWF,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}