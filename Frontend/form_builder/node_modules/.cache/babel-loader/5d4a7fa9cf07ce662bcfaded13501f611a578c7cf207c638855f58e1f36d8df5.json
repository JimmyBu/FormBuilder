{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport { fetchForm, updateForm, fetchAllForms, saveForm } from './api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFields = [{\n  id: \"field-1\",\n  label: \"Text Input\",\n  type: \"text\",\n  placeholder: \"Enter text\",\n  required: false,\n  maxLength: \"\",\n  minLength: \"\"\n}, {\n  id: \"field-2\",\n  label: \"Textarea\",\n  type: \"textarea\",\n  placeholder: \"Enter your message\",\n  required: false,\n  maxLength: \"\",\n  minLength: \"\"\n}, {\n  id: \"field-3\",\n  label: \"Select Dropdown\",\n  type: \"select\",\n  options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n  required: false\n}, {\n  id: \"field-4\",\n  label: \"Checkbox\",\n  type: \"checkbox\",\n  required: false\n}, {\n  id: \"field-5\",\n  label: \"Radio Button\",\n  type: \"radio\",\n  options: [\"Option A\", \"Option B\"],\n  required: false\n}, {\n  id: \"field-6\",\n  label: \"Date Picker\",\n  type: \"date\",\n  required: false\n}, {\n  id: \"field-7\",\n  label: \"File Upload\",\n  type: \"file\",\n  required: false\n}];\nconst FormBuilder = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const [formList, setFormList] = useState([]);\n  const [formId, setFormId] = useState(null);\n  const inputRefs = useRef({});\n\n  // Fetch all forms on component mount\n  useEffect(() => {\n    fetchAllForms().then(forms => {\n      setFormList(forms);\n    });\n  }, []);\n\n  // Focus logic\n  useEffect(() => {\n    if (selectedField) {\n      const inputElement = inputRefs.current[selectedField.id];\n      if (inputElement) {\n        // Ensuring that we focus the input only if it's not already focused\n        if (document.activeElement !== inputElement) {\n          inputElement.focus();\n        }\n      }\n    }\n  }, [selectedField]);\n\n  // Handle drag end for fields\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`\n      };\n      setContainerFields(prev => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n      const removedField = containerFields[source.index];\n      if (selectedField && selectedField.id === removedField.id) {\n        setSelectedField(null);\n      }\n    }\n  };\n\n  // Update field in both fields and containerFields\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = fieldsList => fieldsList.map(field => field.id === id ? {\n      ...field,\n      [key]: key === \"required\" ? !field.required : value\n    } : field);\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === id ? {\n      ...prev,\n      [key]: value\n    } : prev);\n  };\n\n  // Field editor component for updating a field\n  const FieldEditor = ({\n    field\n  }) => {\n    _s();\n    const [localField, setLocalField] = useState(field);\n    const handleLocalChange = (key, value) => {\n      setLocalField(prev => ({\n        ...prev,\n        [key]: value\n      }));\n      handleFieldUpdate(field.id, key, value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: localField.label,\n          onChange: e => handleLocalChange(\"label\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), localField.type === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Max Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.maxLength,\n            onChange: e => handleLocalChange(\"maxLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Min Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.minLength,\n            onChange: e => handleLocalChange(\"minLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"textarea\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Max Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.maxLength,\n            onChange: e => handleLocalChange(\"maxLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Min Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.minLength,\n            onChange: e => handleLocalChange(\"minLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"select\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"radio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Required:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: localField.required,\n          onChange: () => handleLocalChange(\"required\", !localField.required)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Floating Label Field Component\n  _s(FieldEditor, \"5sictikcNsYA25ygiNgWUkf0KXk=\");\n  const FloatingLabelField = /*#__PURE__*/React.forwardRef(({\n    field,\n    onClick\n  }, ref) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        id: field.id,\n        type: field.type,\n        placeholder: field.placeholder,\n        required: field.required,\n        maxLength: field.maxLength,\n        minLength: field.minLength,\n        onClick: onClick,\n        className: \"input-field\",\n        style: {\n          padding: \"10px\",\n          width: \"100%\",\n          minWidth: \"200px\",\n          transition: \"all 0.2s\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field.id,\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"10px\",\n          fontSize: \"16px\",\n          transition: \"all 0.2s\",\n          transform: \"translateY(-20px)\",\n          pointerEvents: \"none\",\n          opacity: field.value || field.placeholder ? \"0.7\" : \"1\"\n        },\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  });\n\n  // Handle form submission\n  const handleSubmit = () => {\n    const formData = containerFields.reduce((acc, field) => {\n      const fieldElement = inputRefs.current[field.id];\n      if (fieldElement) {\n        acc[field.id] = fieldElement.value;\n      }\n      return acc;\n    }, {});\n    saveForm(formId, formData).then(response => {\n      console.log(\"Form submitted successfully\", response);\n    }).catch(error => {\n      console.error(\"Error submitting form\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Form Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Form to Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFormId(e.target.value),\n        value: formId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select a form --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), formList.map(form => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: form.id,\n          children: form.name\n        }, form.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"fields\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                style: {\n                  minWidth: \"250px\",\n                  marginTop: \"20px\"\n                },\n                children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: field.id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    style: {\n                      ...provided.draggableProps.style,\n                      padding: \"10px\",\n                      border: \"1px solid #ddd\",\n                      marginBottom: \"10px\",\n                      cursor: \"move\"\n                    },\n                    onClick: () => setSelectedField(field),\n                    children: field.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 27\n                  }, this)\n                }, field.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Form Fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"container\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                style: {\n                  minWidth: \"250px\",\n                  marginTop: \"20px\"\n                },\n                children: [containerFields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: field.id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    style: {\n                      ...provided.draggableProps.style,\n                      padding: \"10px\",\n                      border: \"1px solid #ddd\",\n                      marginBottom: \"10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FloatingLabelField, {\n                      field: field,\n                      onClick: () => setSelectedField(field),\n                      ref: inputRefs.current\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 27\n                  }, this)\n                }, field.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 23\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"10px\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateForm(formId, containerFields),\n        style: {\n          padding: \"10px 20px\",\n          backgroundColor: \"#4CAF50\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          padding: \"10px 20px\",\n          backgroundColor: \"#008CBA\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormBuilder, \"327IjQpk0R5kb3RB24s7ol4bsBY=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DragDropContext","Droppable","Draggable","fetchForm","updateForm","fetchAllForms","saveForm","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFields","id","label","type","placeholder","required","maxLength","minLength","options","FormBuilder","_s2","_s","$RefreshSig$","fields","setFields","containerFields","setContainerFields","selectedField","setSelectedField","formList","setFormList","formId","setFormId","inputRefs","then","forms","inputElement","current","document","activeElement","focus","onDragEnd","result","source","destination","droppableId","draggedField","index","newField","Date","now","prev","reorderedFields","Array","from","moved","splice","updatedContainerFields","removedField","handleFieldUpdate","key","value","updateFields","fieldsList","map","field","FieldEditor","localField","setLocalField","handleLocalChange","style","border","padding","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","join","split","opt","trim","checked","FloatingLabelField","forwardRef","onClick","ref","position","marginBottom","className","width","minWidth","transition","borderRadius","fontSize","htmlFor","top","left","transform","pointerEvents","opacity","handleSubmit","formData","reduce","acc","fieldElement","response","console","log","catch","error","display","flexDirection","alignItems","justifyContent","textAlign","form","name","provided","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","cursor","marginLeft","gap","backgroundColor","color","_c","$RefreshReg$"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport { fetchForm, updateForm, fetchAllForms, saveForm } from './api';\n\nconst initialFields = [\n  { id: \"field-1\", label: \"Text Input\", type: \"text\", placeholder: \"Enter text\", required: false, maxLength: \"\", minLength: \"\" },\n  { id: \"field-2\", label: \"Textarea\", type: \"textarea\", placeholder: \"Enter your message\", required: false, maxLength: \"\", minLength: \"\" },\n  { \n    id: \"field-3\", \n    label: \"Select Dropdown\", \n    type: \"select\", \n    options: [\"Option 1\", \"Option 2\", \"Option 3\"], \n    required: false \n  },\n  { id: \"field-4\", label: \"Checkbox\", type: \"checkbox\", required: false },\n  { id: \"field-5\", label: \"Radio Button\", type: \"radio\", options: [\"Option A\", \"Option B\"], required: false },\n  { id: \"field-6\", label: \"Date Picker\", type: \"date\", required: false },\n  { id: \"field-7\", label: \"File Upload\", type: \"file\", required: false },\n];\n\nconst FormBuilder = () => {\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const [formList, setFormList] = useState([]);\n  const [formId, setFormId] = useState(null);\n\n  const inputRefs = useRef({});\n\n  // Fetch all forms on component mount\n  useEffect(() => {\n    fetchAllForms().then((forms) => {\n      setFormList(forms);\n    });\n  }, []);\n\n  // Focus logic\n  useEffect(() => {\n    if (selectedField) {\n      const inputElement = inputRefs.current[selectedField.id];\n      if (inputElement) {\n        // Ensuring that we focus the input only if it's not already focused\n        if (document.activeElement !== inputElement) {\n          inputElement.focus();\n        }\n      }\n    }\n  }, [selectedField]);\n\n  // Handle drag end for fields\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`,\n      };\n      setContainerFields((prev) => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n\n      const removedField = containerFields[source.index];\n      if (selectedField && selectedField.id === removedField.id) {\n        setSelectedField(null);\n      }\n    }\n  };\n\n  // Update field in both fields and containerFields\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = (fieldsList) =>\n      fieldsList.map((field) =>\n        field.id === id ? { ...field, [key]: key === \"required\" ? !field.required : value } : field\n      );\n\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField((prev) => (prev?.id === id ? { ...prev, [key]: value } : prev));\n  };\n\n  // Field editor component for updating a field\n  const FieldEditor = ({ field }) => {\n    const [localField, setLocalField] = useState(field);\n\n    const handleLocalChange = (key, value) => {\n      setLocalField((prev) => ({ ...prev, [key]: value }));\n      handleFieldUpdate(field.id, key, value);\n    };\n\n    return (\n      <div style={{ border: \"1px solid #ddd\", padding: \"10px\", marginTop: \"10px\" }}>\n        <h4>Edit Field</h4>\n        <label>\n          Label:\n          <input\n            type=\"text\"\n            value={localField.label}\n            onChange={(e) => handleLocalChange(\"label\", e.target.value)}\n          />\n        </label>\n        <br />\n        {localField.type === \"text\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Max Length:\n              <input\n                type=\"number\"\n                value={localField.maxLength}\n                onChange={(e) => handleLocalChange(\"maxLength\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Min Length:\n              <input\n                type=\"number\"\n                value={localField.minLength}\n                onChange={(e) => handleLocalChange(\"minLength\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"textarea\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Max Length:\n              <input\n                type=\"number\"\n                value={localField.maxLength}\n                onChange={(e) => handleLocalChange(\"maxLength\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Min Length:\n              <input\n                type=\"number\"\n                value={localField.minLength}\n                onChange={(e) => handleLocalChange(\"minLength\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"select\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"radio\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        <label>\n          Required:\n          <input\n            type=\"checkbox\"\n            checked={localField.required}\n            onChange={() => handleLocalChange(\"required\", !localField.required)}\n          />\n        </label>\n      </div>\n    );\n  };\n\n  // Floating Label Field Component\n  const FloatingLabelField = React.forwardRef(({ field, onClick }, ref) => {\n    return (\n      <div style={{ position: \"relative\", marginBottom: \"20px\" }}>\n        <input\n          ref={ref}\n          id={field.id}\n          type={field.type}\n          placeholder={field.placeholder}\n          required={field.required}\n          maxLength={field.maxLength}\n          minLength={field.minLength}\n          onClick={onClick}\n          className=\"input-field\"\n          style={{\n            padding: \"10px\",\n            width: \"100%\",\n            minWidth: \"200px\",\n            transition: \"all 0.2s\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            fontSize: \"16px\",\n          }}\n        />\n        <label\n          htmlFor={field.id}\n          style={{\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            fontSize: \"16px\",\n            transition: \"all 0.2s\",\n            transform: \"translateY(-20px)\",\n            pointerEvents: \"none\",\n            opacity: field.value || field.placeholder ? \"0.7\" : \"1\",\n          }}\n        >\n          {field.label}\n        </label>\n      </div>\n    );\n  });\n\n  // Handle form submission\n  const handleSubmit = () => {\n    const formData = containerFields.reduce((acc, field) => {\n      const fieldElement = inputRefs.current[field.id];\n      if (fieldElement) {\n        acc[field.id] = fieldElement.value;\n      }\n      return acc;\n    }, {});\n\n    saveForm(formId, formData).then((response) => {\n      console.log(\"Form submitted successfully\", response);\n    }).catch((error) => {\n      console.error(\"Error submitting form\", error);\n    });\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }}>\n      <h2 style={{ textAlign: \"center\" }}>Form Builder</h2>\n      \n      {/* Fetch and display all forms */}\n      <div>\n        <h3>Select Form to Edit</h3>\n        <select onChange={(e) => setFormId(e.target.value)} value={formId}>\n          <option value=\"\">-- Select a form --</option>\n          {formList.map((form) => (\n            <option key={form.id} value={form.id}>\n              {form.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <div style={{ display: \"flex\" }}>\n            <div>\n              <h3>Available Fields</h3>\n              <Droppable droppableId=\"fields\">\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      minWidth: \"250px\",\n                      marginTop: \"20px\",\n                    }}\n                  >\n                    {fields.map((field, index) => (\n                      <Draggable key={field.id} draggableId={field.id} index={index}>\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={{\n                              ...provided.draggableProps.style,\n                              padding: \"10px\",\n                              border: \"1px solid #ddd\",\n                              marginBottom: \"10px\",\n                              cursor: \"move\",\n                            }}\n                            onClick={() => setSelectedField(field)}\n                          >\n                            {field.label}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n\n            <div style={{ marginLeft: \"20px\" }}>\n              <h3>Form Fields</h3>\n              <Droppable droppableId=\"container\">\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      minWidth: \"250px\",\n                      marginTop: \"20px\",\n                    }}\n                  >\n                    {containerFields.map((field, index) => (\n                      <Draggable key={field.id} draggableId={field.id} index={index}>\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={{\n                              ...provided.draggableProps.style,\n                              padding: \"10px\",\n                              border: \"1px solid #ddd\",\n                              marginBottom: \"10px\",\n                            }}\n                          >\n                            <FloatingLabelField\n                              field={field}\n                              onClick={() => setSelectedField(field)}\n                              ref={inputRefs.current}\n                            />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n          </div>\n        </DragDropContext>\n      </div>\n\n      {/* Update and Submit Button */}\n      <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"20px\" }}>\n        <button \n          onClick={() => updateForm(formId, containerFields)} \n          style={{\n            padding: \"10px 20px\",\n            backgroundColor: \"#4CAF50\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n          }}\n        >\n          Update\n        </button>\n        <button \n          onClick={handleSubmit}\n          style={{\n            padding: \"10px 20px\",\n            backgroundColor: \"#008CBA\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n          }}\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}