{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFields = [{\n  id: \"field-1\",\n  label: \"Text Input\",\n  type: \"text\",\n  placeholder: \"Enter text\",\n  required: false,\n  maxLength: \"\",\n  minLength: \"\"\n}, {\n  id: \"field-2\",\n  label: \"Textarea\",\n  type: \"textarea\",\n  placeholder: \"Enter your message\",\n  required: false,\n  maxLength: \"\",\n  minLength: \"\"\n}, {\n  id: \"field-3\",\n  label: \"Select Dropdown\",\n  type: \"select\",\n  options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n  required: false\n}, {\n  id: \"field-4\",\n  label: \"Checkbox\",\n  type: \"checkbox\",\n  required: false\n}, {\n  id: \"field-5\",\n  label: \"Radio Button\",\n  type: \"radio\",\n  options: [\"Option A\", \"Option B\"],\n  required: false\n}, {\n  id: \"field-6\",\n  label: \"Date Picker\",\n  type: \"date\",\n  required: false\n}, {\n  id: \"field-7\",\n  label: \"File Upload\",\n  type: \"file\",\n  required: false\n}];\nconst FormBuilder = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n\n  // Create a ref for each field to handle focus\n  const inputRefs = useRef({});\n\n  // UseEffect hook to handle focusing the selected field\n  useEffect(() => {\n    if (selectedField) {\n      const inputElement = inputRefs.current[selectedField.id];\n      if (inputElement) {\n        inputElement.focus(); // Focus the selected field\n      }\n    }\n  }, [selectedField]);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}` // Generate a unique ID for the field\n      };\n      setContainerFields(prev => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n\n      // If the removed field is currently selected, deselect it\n      const removedField = containerFields[source.index];\n      if (selectedField && selectedField.id === removedField.id) {\n        setSelectedField(null);\n      }\n    }\n  };\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = fieldsList => fieldsList.map(field => field.id === id ? {\n      ...field,\n      [key]: key === \"required\" ? !field.required : value\n    } : field);\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === id ? {\n      ...prev,\n      [key]: value\n    } : prev);\n  };\n  const FieldEditor = ({\n    field\n  }) => {\n    _s();\n    const [localField, setLocalField] = useState(field);\n    const handleLocalChange = (key, value) => {\n      setLocalField(prev => ({\n        ...prev,\n        [key]: value\n      }));\n      handleFieldUpdate(field.id, key, value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: localField.label,\n          onChange: e => handleLocalChange(\"label\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), localField.type === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Max Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.maxLength,\n            onChange: e => handleLocalChange(\"maxLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Min Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.minLength,\n            onChange: e => handleLocalChange(\"minLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"textarea\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Max Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.maxLength,\n            onChange: e => handleLocalChange(\"maxLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Min Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.minLength,\n            onChange: e => handleLocalChange(\"minLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"select\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"radio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Required:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: localField.required,\n          onChange: () => handleLocalChange(\"required\", !localField.required)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Create a ref forwarding component for each field\n  _s(FieldEditor, \"5sictikcNsYA25ygiNgWUkf0KXk=\");\n  const FocusableField = /*#__PURE__*/React.forwardRef(({\n    field,\n    onClick\n  }, ref) => {\n    switch (field.type) {\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref,\n          type: \"text\",\n          placeholder: field.placeholder,\n          required: field.required,\n          maxLength: field.maxLength,\n          minLength: field.minLength,\n          onClick: onClick,\n          style: {\n            minWidth: \"200px\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this);\n      case \"textarea\":\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: ref,\n          placeholder: field.placeholder,\n          required: field.required,\n          maxLength: field.maxLength,\n          minLength: field.minLength,\n          onClick: onClick,\n          style: {\n            minWidth: \"200px\",\n            minHeight: \"100px\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this);\n      case \"select\":\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: ref,\n          required: field.required,\n          onClick: onClick,\n          children: field.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this);\n      case \"checkbox\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          ref: ref,\n          required: field.required,\n          onClick: onClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 16\n        }, this);\n      case \"radio\":\n        return field.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: field.id,\n            ref: ref,\n            required: field.required,\n            onClick: onClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), option]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this));\n      case \"date\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ref: ref,\n          required: field.required,\n          onClick: onClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 16\n        }, this);\n      case \"file\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: ref,\n          required: field.required,\n          onClick: onClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  });\n  const renderFields = () => containerFields.map((field, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: field.id,\n    index: idx,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      onClick: () => setSelectedField(field),\n      style: {\n        ...provided.draggableProps.style,\n        backgroundColor: \"#f0f0f0\",\n        padding: \"10px\",\n        marginBottom: \"10px\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FocusableField, {\n        ref: el => inputRefs.current[field.id] = el,\n        field: field,\n        onClick: () => setSelectedField(field)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }, this)\n  }, field.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"fields\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            flex: 1,\n            border: \"1px solid #ddd\",\n            padding: \"10px\",\n            minHeight: \"500px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Available Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), initialFields.map((field, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: field.id,\n            index: idx,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                ...provided.draggableProps.style,\n                marginBottom: \"10px\",\n                padding: \"10px\",\n                backgroundColor: \"#f0f0f0\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"5px\"\n              },\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 21\n            }, this)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"container\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            flex: 2,\n            border: \"1px solid #ddd\",\n            padding: \"10px\",\n            minHeight: \"500px\",\n            marginLeft: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Form Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), renderFields(), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(FieldEditor, {\n      field: selectedField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormBuilder, \"JVBZXc8IR0TnqVovN0CCOIf08mY=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFields","id","label","type","placeholder","required","maxLength","minLength","options","FormBuilder","_s2","_s","$RefreshSig$","fields","setFields","containerFields","setContainerFields","selectedField","setSelectedField","inputRefs","inputElement","current","focus","onDragEnd","result","source","destination","droppableId","draggedField","index","newField","Date","now","prev","reorderedFields","Array","from","moved","splice","updatedContainerFields","removedField","handleFieldUpdate","key","value","updateFields","fieldsList","map","field","FieldEditor","localField","setLocalField","handleLocalChange","style","border","padding","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","join","split","opt","trim","checked","FocusableField","forwardRef","onClick","ref","minWidth","marginBottom","minHeight","option","idx","name","renderFields","draggableId","provided","innerRef","draggableProps","dragHandleProps","backgroundColor","borderRadius","el","display","droppableProps","flex","marginLeft","_c","$RefreshReg$"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\n\nconst initialFields = [\n  { id: \"field-1\", label: \"Text Input\", type: \"text\", placeholder: \"Enter text\", required: false, maxLength: \"\", minLength: \"\" },\n  { id: \"field-2\", label: \"Textarea\", type: \"textarea\", placeholder: \"Enter your message\", required: false, maxLength: \"\", minLength: \"\" },\n  { \n    id: \"field-3\", \n    label: \"Select Dropdown\", \n    type: \"select\", \n    options: [\"Option 1\", \"Option 2\", \"Option 3\"], \n    required: false \n  },\n  { id: \"field-4\", label: \"Checkbox\", type: \"checkbox\", required: false },\n  { id: \"field-5\", label: \"Radio Button\", type: \"radio\", options: [\"Option A\", \"Option B\"], required: false },\n  { id: \"field-6\", label: \"Date Picker\", type: \"date\", required: false },\n  { id: \"field-7\", label: \"File Upload\", type: \"file\", required: false },\n];\n\nconst FormBuilder = () => {\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  \n  // Create a ref for each field to handle focus\n  const inputRefs = useRef({});\n\n  // UseEffect hook to handle focusing the selected field\n  useEffect(() => {\n    if (selectedField) {\n      const inputElement = inputRefs.current[selectedField.id];\n      if (inputElement) {\n        inputElement.focus(); // Focus the selected field\n      }\n    }\n  }, [selectedField]);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`, // Generate a unique ID for the field\n      };\n      setContainerFields((prev) => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n\n      // If the removed field is currently selected, deselect it\n      const removedField = containerFields[source.index];\n      if (selectedField && selectedField.id === removedField.id) {\n        setSelectedField(null);\n      }\n    }\n  };\n\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = (fieldsList) =>\n      fieldsList.map((field) =>\n        field.id === id ? { ...field, [key]: key === \"required\" ? !field.required : value } : field\n      );\n\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField((prev) => (prev?.id === id ? { ...prev, [key]: value } : prev));\n  };\n\n  const FieldEditor = ({ field }) => {\n    const [localField, setLocalField] = useState(field);\n\n    const handleLocalChange = (key, value) => {\n      setLocalField((prev) => ({ ...prev, [key]: value }));\n      handleFieldUpdate(field.id, key, value);\n    };\n\n    return (\n      <div style={{ border: \"1px solid #ddd\", padding: \"10px\", marginTop: \"10px\" }}>\n        <h4>Edit Field</h4>\n        <label>\n          Label:\n          <input\n            type=\"text\"\n            value={localField.label}\n            onChange={(e) => handleLocalChange(\"label\", e.target.value)}\n          />\n        </label>\n        <br />\n        {localField.type === \"text\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Max Length:\n              <input\n                type=\"number\"\n                value={localField.maxLength}\n                onChange={(e) => handleLocalChange(\"maxLength\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Min Length:\n              <input\n                type=\"number\"\n                value={localField.minLength}\n                onChange={(e) => handleLocalChange(\"minLength\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"textarea\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Max Length:\n              <input\n                type=\"number\"\n                value={localField.maxLength}\n                onChange={(e) => handleLocalChange(\"maxLength\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Min Length:\n              <input\n                type=\"number\"\n                value={localField.minLength}\n                onChange={(e) => handleLocalChange(\"minLength\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"select\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"radio\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        <label>\n          Required:\n          <input\n            type=\"checkbox\"\n            checked={localField.required}\n            onChange={() => handleLocalChange(\"required\", !localField.required)}\n          />\n        </label>\n      </div>\n    );\n  };\n\n  // Create a ref forwarding component for each field\n  const FocusableField = React.forwardRef(({ field, onClick }, ref) => {\n    switch (field.type) {\n      case \"text\":\n        return (\n          <input\n            ref={ref}\n            type=\"text\"\n            placeholder={field.placeholder}\n            required={field.required}\n            maxLength={field.maxLength}\n            minLength={field.minLength}\n            onClick={onClick}\n            style={{ minWidth: \"200px\", marginBottom: \"10px\" }}\n          />\n        );\n      case \"textarea\":\n        return (\n          <textarea\n            ref={ref}\n            placeholder={field.placeholder}\n            required={field.required}\n            maxLength={field.maxLength}\n            minLength={field.minLength}\n            onClick={onClick}\n            style={{ minWidth: \"200px\", minHeight: \"100px\", marginBottom: \"10px\" }}\n          />\n        );\n      case \"select\":\n        return (\n          <select ref={ref} required={field.required} onClick={onClick}>\n            {field.options.map((option, idx) => (\n              <option key={idx} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        );\n      case \"checkbox\":\n        return <input type=\"checkbox\" ref={ref} required={field.required} onClick={onClick} />;\n      case \"radio\":\n        return field.options.map((option, idx) => (\n          <label key={idx}>\n            <input type=\"radio\" name={field.id} ref={ref} required={field.required} onClick={onClick} />\n            {option}\n          </label>\n        ));\n      case \"date\":\n        return <input type=\"date\" ref={ref} required={field.required} onClick={onClick} />;\n      case \"file\":\n        return <input type=\"file\" ref={ref} required={field.required} onClick={onClick} />;\n      default:\n        return null;\n    }\n  });\n\n  const renderFields = () =>\n    containerFields.map((field, idx) => (\n      <Draggable key={field.id} draggableId={field.id} index={idx}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onClick={() => setSelectedField(field)}\n            style={{\n              ...provided.draggableProps.style,\n              backgroundColor: \"#f0f0f0\",\n              padding: \"10px\",\n              marginBottom: \"10px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <FocusableField\n              ref={(el) => (inputRefs.current[field.id] = el)}\n              field={field}\n              onClick={() => setSelectedField(field)}\n            />\n          </div>\n        )}\n      </Draggable>\n    ));\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"fields\">\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              style={{\n                flex: 1,\n                border: \"1px solid #ddd\",\n                padding: \"10px\",\n                minHeight: \"500px\",\n              }}\n            >\n              <h3>Available Fields</h3>\n              {initialFields.map((field, idx) => (\n                <Draggable key={field.id} draggableId={field.id} index={idx}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        ...provided.draggableProps.style,\n                        marginBottom: \"10px\",\n                        padding: \"10px\",\n                        backgroundColor: \"#f0f0f0\",\n                        border: \"1px solid #ccc\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {field.label}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n            </div>\n          )}\n        </Droppable>\n        <Droppable droppableId=\"container\">\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              style={{\n                flex: 2,\n                border: \"1px solid #ddd\",\n                padding: \"10px\",\n                minHeight: \"500px\",\n                marginLeft: \"10px\",\n              }}\n            >\n              <h3>Form Fields</h3>\n              {renderFields()}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {selectedField && <FieldEditor field={selectedField} />}\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}