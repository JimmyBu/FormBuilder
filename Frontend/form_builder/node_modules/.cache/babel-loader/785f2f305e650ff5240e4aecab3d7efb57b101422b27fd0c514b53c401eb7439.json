{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFields = [{\n  id: \"field-1\",\n  label: \"Text Input\",\n  type: \"text\",\n  placeholder: \"Enter text\",\n  required: false\n}, {\n  id: \"field-2\",\n  label: \"Textarea\",\n  type: \"textarea\",\n  placeholder: \"Enter your message\",\n  required: false\n}, {\n  id: \"field-3\",\n  label: \"Select Dropdown\",\n  type: \"select\",\n  options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n  required: false\n}, {\n  id: \"field-4\",\n  label: \"Checkbox\",\n  type: \"checkbox\",\n  required: false\n}, {\n  id: \"field-5\",\n  label: \"Radio Button\",\n  type: \"radio\",\n  options: [\"Option A\", \"Option B\"],\n  required: false\n}, {\n  id: \"field-6\",\n  label: \"Date Picker\",\n  type: \"date\",\n  required: false\n}, {\n  id: \"field-7\",\n  label: \"File Upload\",\n  type: \"file\",\n  required: false\n}];\nconst FormBuilder = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const inputRefs = useRef({});\n\n  // Use effect to set focus on the selected field when it changes\n  useEffect(() => {\n    if (selectedField) {\n      const inputElement = inputRefs.current[selectedField.id];\n      if (inputElement) {\n        inputElement.focus(); // Focus the selected input element programmatically\n      }\n    }\n  }, [selectedField]);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}` // Generate a unique ID for the field\n      };\n      setContainerFields(prev => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n\n      // If the removed field is currently selected, deselect it\n      const removedField = containerFields[source.index];\n      if (selectedField && selectedField.id === removedField.id) {\n        setSelectedField(null);\n      }\n    }\n  };\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = fieldsList => fieldsList.map(field => field.id === id ? {\n      ...field,\n      [key]: key === \"required\" ? !field.required : value\n    } : field);\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === id ? {\n      ...prev,\n      [key]: value\n    } : prev);\n  };\n  const FieldEditor = ({\n    field\n  }) => {\n    _s();\n    const [localField, setLocalField] = useState(field);\n    const handleLocalChange = (key, value) => {\n      setLocalField(prev => ({\n        ...prev,\n        [key]: value\n      }));\n      handleFieldUpdate(field.id, key, value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: localField.label,\n          onChange: e => handleLocalChange(\"label\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), localField.type === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"textarea\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"select\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"radio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Required:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: localField.required,\n          onChange: () => handleLocalChange(\"required\", !localField.required)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  };\n  _s(FieldEditor, \"5sictikcNsYA25ygiNgWUkf0KXk=\");\n  const renderField = field => {\n    switch (field.type) {\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: field.placeholder,\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el // Save reference\n          ,\n          style: {\n            minWidth: \"200px\",\n            marginBottom: \"10px\"\n          },\n          onClick: () => setSelectedField(field) // Focus on this field when clicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this);\n      case \"textarea\":\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: field.placeholder,\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el // Save reference\n          ,\n          style: {\n            minWidth: \"200px\",\n            minHeight: \"100px\",\n            marginBottom: \"10px\"\n          },\n          onClick: () => setSelectedField(field) // Focus on this field when clicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this);\n      case \"select\":\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el,\n          onClick: () => setSelectedField(field),\n          children: field.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this);\n      case \"checkbox\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el,\n          onClick: () => setSelectedField(field)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 16\n        }, this);\n      case \"radio\":\n        return field.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: field.id,\n            required: field.required,\n            ref: el => inputRefs.current[field.id] = el,\n            onClick: () => setSelectedField(field)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), option]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this));\n      case \"date\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el,\n          onClick: () => setSelectedField(field)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 16\n        }, this);\n      case \"file\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          required: field.required,\n          ref: el => inputRefs.current[field.id] = el,\n          onClick: () => setSelectedField(field)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const renderFields = () => {\n    return containerFields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: field.id,\n      index: index,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        style: {\n          ...provided.draggableProps.style,\n          margin: \"5px 0\",\n          padding: \"10px\",\n          backgroundColor: \"#e0f7fa\",\n          border: \"1px solid #00acc1\",\n          borderRadius: \"5px\"\n        },\n        onClick: () => setSelectedField(field) // Focuses on field when clicked\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), renderField(field)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Form Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"fields\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            style: {\n              flex: 1,\n              border: \"1px solid #ddd\",\n              padding: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), initialFields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: field.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: {\n                  ...provided.draggableProps.style,\n                  margin: \"5px 0\",\n                  padding: \"10px\",\n                  backgroundColor: \"#f5f5f5\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"5px\"\n                },\n                onClick: () => setSelectedField(field) // Focus on field when clicked\n                ,\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this)\n            }, field.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"container\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            style: {\n              flex: 1,\n              border: \"1px solid #ddd\",\n              padding: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Form Fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), renderFields(), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(FieldEditor, {\n      field: selectedField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormBuilder, \"JVBZXc8IR0TnqVovN0CCOIf08mY=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFields","id","label","type","placeholder","required","options","FormBuilder","_s2","_s","$RefreshSig$","fields","setFields","containerFields","setContainerFields","selectedField","setSelectedField","inputRefs","inputElement","current","focus","onDragEnd","result","source","destination","droppableId","draggedField","index","newField","Date","now","prev","reorderedFields","Array","from","moved","splice","updatedContainerFields","removedField","handleFieldUpdate","key","value","updateFields","fieldsList","map","field","FieldEditor","localField","setLocalField","handleLocalChange","style","border","padding","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","join","split","opt","trim","checked","renderField","ref","el","minWidth","marginBottom","onClick","minHeight","option","idx","name","renderFields","draggableId","provided","innerRef","draggableProps","dragHandleProps","margin","backgroundColor","borderRadius","display","justifyContent","flexDirection","droppableProps","flex","_c","$RefreshReg$"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\n\nconst initialFields = [\n  { id: \"field-1\", label: \"Text Input\", type: \"text\", placeholder: \"Enter text\", required: false },\n  { id: \"field-2\", label: \"Textarea\", type: \"textarea\", placeholder: \"Enter your message\", required: false },\n  { \n    id: \"field-3\", \n    label: \"Select Dropdown\", \n    type: \"select\", \n    options: [\"Option 1\", \"Option 2\", \"Option 3\"], \n    required: false \n  },\n  { id: \"field-4\", label: \"Checkbox\", type: \"checkbox\", required: false },\n  { id: \"field-5\", label: \"Radio Button\", type: \"radio\", options: [\"Option A\", \"Option B\"], required: false },\n  { id: \"field-6\", label: \"Date Picker\", type: \"date\", required: false },\n  { id: \"field-7\", label: \"File Upload\", type: \"file\", required: false },\n];\n\nconst FormBuilder = () => {\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const inputRefs = useRef({});\n\n  // Use effect to set focus on the selected field when it changes\n  useEffect(() => {\n    if (selectedField) {\n      const inputElement = inputRefs.current[selectedField.id];\n      if (inputElement) {\n        inputElement.focus();  // Focus the selected input element programmatically\n      }\n    }\n  }, [selectedField]);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`, // Generate a unique ID for the field\n      };\n      setContainerFields((prev) => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n\n      // If the removed field is currently selected, deselect it\n      const removedField = containerFields[source.index];\n      if (selectedField && selectedField.id === removedField.id) {\n        setSelectedField(null);\n      }\n    }\n  };\n\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = (fieldsList) =>\n      fieldsList.map((field) =>\n        field.id === id ? { ...field, [key]: key === \"required\" ? !field.required : value } : field\n      );\n\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField((prev) => (prev?.id === id ? { ...prev, [key]: value } : prev));\n  };\n\n  const FieldEditor = ({ field }) => {\n    const [localField, setLocalField] = useState(field);\n\n    const handleLocalChange = (key, value) => {\n      setLocalField((prev) => ({ ...prev, [key]: value }));\n      handleFieldUpdate(field.id, key, value);\n    };\n\n    return (\n      <div style={{ border: \"1px solid #ddd\", padding: \"10px\", marginTop: \"10px\" }}>\n        <h4>Edit Field</h4>\n        <label>\n          Label:\n          <input\n            type=\"text\"\n            value={localField.label}\n            onChange={(e) => handleLocalChange(\"label\", e.target.value)}\n          />\n        </label>\n        <br />\n        {localField.type === \"text\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"textarea\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"select\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"radio\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        <label>\n          Required:\n          <input\n            type=\"checkbox\"\n            checked={localField.required}\n            onChange={() => handleLocalChange(\"required\", !localField.required)}\n          />\n        </label>\n      </div>\n    );\n  };\n\n  const renderField = (field) => {\n    switch (field.type) {\n      case \"text\":\n        return (\n          <input\n            type=\"text\"\n            placeholder={field.placeholder}\n            required={field.required}\n            ref={(el) => (inputRefs.current[field.id] = el)} // Save reference\n            style={{ minWidth: \"200px\", marginBottom: \"10px\" }}\n            onClick={() => setSelectedField(field)} // Focus on this field when clicked\n          />\n        );\n      case \"textarea\":\n        return (\n          <textarea\n            placeholder={field.placeholder}\n            required={field.required}\n            ref={(el) => (inputRefs.current[field.id] = el)} // Save reference\n            style={{ minWidth: \"200px\", minHeight: \"100px\", marginBottom: \"10px\" }}\n            onClick={() => setSelectedField(field)} // Focus on this field when clicked\n          />\n        );\n      case \"select\":\n        return (\n          <select required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedField(field)}>\n            {field.options.map((option, idx) => (\n              <option key={idx} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        );\n      case \"checkbox\":\n        return <input type=\"checkbox\" required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedField(field)} />;\n      case \"radio\":\n        return field.options.map((option, idx) => (\n          <label key={idx}>\n            <input type=\"radio\" name={field.id} required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedField(field)} />\n            {option}\n          </label>\n        ));\n      case \"date\":\n        return <input type=\"date\" required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedField(field)} />;\n      case \"file\":\n        return <input type=\"file\" required={field.required} ref={(el) => (inputRefs.current[field.id] = el)} onClick={() => setSelectedField(field)} />;\n      default:\n        return null;\n    }\n  };\n\n  const renderFields = () => {\n    return containerFields.map((field, index) => (\n      <Draggable key={field.id} draggableId={field.id} index={index}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={{\n              ...provided.draggableProps.style,\n              margin: \"5px 0\",\n              padding: \"10px\",\n              backgroundColor: \"#e0f7fa\",\n              border: \"1px solid #00acc1\",\n              borderRadius: \"5px\",\n            }}\n            onClick={() => setSelectedField(field)}  // Focuses on field when clicked\n          >\n            <label>{field.label}</label>\n            {renderField(field)}\n          </div>\n        )}\n      </Draggable>\n    ));\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Form Builder</h1>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", flexDirection: \"row\" }}>\n          <Droppable droppableId=\"fields\">\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={{ flex: 1, border: \"1px solid #ddd\", padding: \"10px\" }}\n              >\n                <h3>Available Fields</h3>\n                {initialFields.map((field, index) => (\n                  <Draggable key={field.id} draggableId={field.id} index={index}>\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          ...provided.draggableProps.style,\n                          margin: \"5px 0\",\n                          padding: \"10px\",\n                          backgroundColor: \"#f5f5f5\",\n                          border: \"1px solid #ccc\",\n                          borderRadius: \"5px\",\n                        }}\n                        onClick={() => setSelectedField(field)}  // Focus on field when clicked\n                      >\n                        {field.label}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          <Droppable droppableId=\"container\">\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={{ flex: 1, border: \"1px solid #ddd\", padding: \"10px\" }}\n              >\n                <h3>Form Fields</h3>\n                {renderFields()}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n      {selectedField && <FieldEditor field={selectedField} />}\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}