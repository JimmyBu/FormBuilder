{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFields = [{\n  id: \"field-1\",\n  label: \"Text Input\",\n  type: \"text\",\n  placeholder: \"Enter text\",\n  required: false,\n  maxLength: \"\",\n  minLength: \"\"\n}, {\n  id: \"field-2\",\n  label: \"Textarea\",\n  type: \"textarea\",\n  placeholder: \"Enter your message\",\n  required: false,\n  maxLength: \"\",\n  minLength: \"\"\n}, {\n  id: \"field-3\",\n  label: \"Select Dropdown\",\n  type: \"select\",\n  options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n  required: false\n}, {\n  id: \"field-4\",\n  label: \"Checkbox\",\n  type: \"checkbox\",\n  required: false\n}, {\n  id: \"field-5\",\n  label: \"Radio Button\",\n  type: \"radio\",\n  options: [\"Option A\", \"Option B\"],\n  required: false\n}, {\n  id: \"field-6\",\n  label: \"Date Picker\",\n  type: \"date\",\n  required: false\n}, {\n  id: \"field-7\",\n  label: \"File Upload\",\n  type: \"file\",\n  required: false\n}];\nconst FormBuilder = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const inputRefs = useRef({});\n  const saveForm = async formData => {\n    try {\n      const response = await axios.post(\"http://your-laravel-api-url/api/forms\", {\n        form_name: \"My Custom Form\",\n        // You can get the name dynamically\n        form_data: formData\n      });\n      console.log(\"Form saved successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error saving form:\", error);\n    }\n  };\n\n  // This is where you can handle form submission\n  const handleFormSave = () => {\n    saveForm(containerFields); // Pass the form data when saving\n  };\n\n  // Focus logic\n  useEffect(() => {\n    if (selectedField) {\n      const inputElement = inputRefs.current[selectedField.id];\n      if (inputElement) {\n        // Ensuring that we focus the input only if it's not already focused\n        if (document.activeElement !== inputElement) {\n          inputElement.focus();\n        }\n      }\n    }\n  }, [selectedField]); // Only trigger focus when selectedField changes\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`\n      };\n      setContainerFields(prev => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n      const removedField = containerFields[source.index];\n      if (selectedField && selectedField.id === removedField.id) {\n        setSelectedField(null);\n      }\n    }\n  };\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = fieldsList => fieldsList.map(field => field.id === id ? {\n      ...field,\n      [key]: key === \"required\" ? !field.required : value\n    } : field);\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === id ? {\n      ...prev,\n      [key]: value\n    } : prev);\n  };\n  const FieldEditor = ({\n    field\n  }) => {\n    _s();\n    const [localField, setLocalField] = useState(field);\n    const handleLocalChange = (key, value) => {\n      setLocalField(prev => ({\n        ...prev,\n        [key]: value\n      }));\n      handleFieldUpdate(field.id, key, value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: localField.label,\n          onChange: e => handleLocalChange(\"label\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), localField.type === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Max Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.maxLength,\n            onChange: e => handleLocalChange(\"maxLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Min Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.minLength,\n            onChange: e => handleLocalChange(\"minLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"textarea\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.placeholder,\n            onChange: e => handleLocalChange(\"placeholder\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Max Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.maxLength,\n            onChange: e => handleLocalChange(\"maxLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Min Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: localField.minLength,\n            onChange: e => handleLocalChange(\"minLength\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"select\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), localField.type === \"radio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Options (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: localField.options.join(\", \"),\n            onChange: e => handleLocalChange(\"options\", e.target.value.split(\",\").map(opt => opt.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Required:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: localField.required,\n          onChange: () => handleLocalChange(\"required\", !localField.required)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  };\n  _s(FieldEditor, \"5sictikcNsYA25ygiNgWUkf0KXk=\");\n  const FloatingLabelField = /*#__PURE__*/React.forwardRef(({\n    field,\n    onClick\n  }, ref) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        id: field.id,\n        type: field.type,\n        placeholder: field.placeholder,\n        required: field.required,\n        maxLength: field.maxLength,\n        minLength: field.minLength,\n        onClick: onClick,\n        className: \"input-field\",\n        style: {\n          padding: \"10px\",\n          width: \"100%\",\n          minWidth: \"200px\",\n          transition: \"all 0.2s\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field.id,\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"10px\",\n          fontSize: \"16px\",\n          transition: \"all 0.2s\",\n          transform: \"translateY(-20px)\",\n          pointerEvents: \"none\",\n          opacity: field.value || field.placeholder ? \"0.7\" : \"1\"\n        },\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"fields\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          style: {\n            padding: \"10px\",\n            backgroundColor: \"#f4f4f4\",\n            borderRadius: \"5px\"\n          },\n          children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: field.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                ...provided.draggableProps.style,\n                margin: \"10px 0\",\n                padding: \"10px\",\n                backgroundColor: \"#fff\",\n                borderRadius: \"5px\",\n                border: \"1px solid #ddd\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => setSelectedField(field),\n                style: {\n                  cursor: \"pointer\",\n                  marginBottom: \"10px\"\n                },\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, this)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"container\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          style: {\n            padding: \"10px\",\n            backgroundColor: \"#e9e9e9\",\n            borderRadius: \"5px\"\n          },\n          children: [containerFields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: field.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                ...provided.draggableProps.style,\n                margin: \"10px 0\",\n                padding: \"10px\",\n                backgroundColor: \"#fff\",\n                borderRadius: \"5px\",\n                border: \"1px solid #ddd\"\n              },\n              children: /*#__PURE__*/_jsxDEV(FloatingLabelField, {\n                ref: ref => {\n                  if (field.id === (selectedField === null || selectedField === void 0 ? void 0 : selectedField.id)) {\n                    inputRefs.current[field.id] = ref;\n                  }\n                },\n                field: field,\n                onClick: () => setSelectedField(field)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(FieldEditor, {\n      field: selectedField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormBuilder, \"JVBZXc8IR0TnqVovN0CCOIf08mY=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFields","id","label","type","placeholder","required","maxLength","minLength","options","FormBuilder","_s2","_s","$RefreshSig$","fields","setFields","containerFields","setContainerFields","selectedField","setSelectedField","inputRefs","saveForm","formData","response","axios","post","form_name","form_data","console","log","data","error","handleFormSave","inputElement","current","document","activeElement","focus","onDragEnd","result","source","destination","droppableId","draggedField","index","newField","Date","now","prev","reorderedFields","Array","from","moved","splice","updatedContainerFields","removedField","handleFieldUpdate","key","value","updateFields","fieldsList","map","field","FieldEditor","localField","setLocalField","handleLocalChange","style","border","padding","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","join","split","opt","trim","checked","FloatingLabelField","forwardRef","onClick","ref","position","marginBottom","className","width","minWidth","transition","borderRadius","fontSize","htmlFor","top","left","transform","pointerEvents","opacity","provided","innerRef","backgroundColor","draggableId","draggableProps","dragHandleProps","margin","cursor","_c","$RefreshReg$"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\n\nconst initialFields = [\n  { id: \"field-1\", label: \"Text Input\", type: \"text\", placeholder: \"Enter text\", required: false, maxLength: \"\", minLength: \"\" },\n  { id: \"field-2\", label: \"Textarea\", type: \"textarea\", placeholder: \"Enter your message\", required: false, maxLength: \"\", minLength: \"\" },\n  { \n    id: \"field-3\", \n    label: \"Select Dropdown\", \n    type: \"select\", \n    options: [\"Option 1\", \"Option 2\", \"Option 3\"], \n    required: false \n  },\n  { id: \"field-4\", label: \"Checkbox\", type: \"checkbox\", required: false },\n  { id: \"field-5\", label: \"Radio Button\", type: \"radio\", options: [\"Option A\", \"Option B\"], required: false },\n  { id: \"field-6\", label: \"Date Picker\", type: \"date\", required: false },\n  { id: \"field-7\", label: \"File Upload\", type: \"file\", required: false },\n];\n\nconst FormBuilder = () => {\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n\n  const inputRefs = useRef({});\n\n  const saveForm = async (formData) => {\n    try {\n      const response = await axios.post(\"http://your-laravel-api-url/api/forms\", {\n        form_name: \"My Custom Form\",  // You can get the name dynamically\n        form_data: formData, \n      });\n      console.log(\"Form saved successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error saving form:\", error);\n    }\n  };\n\n  // This is where you can handle form submission\n  const handleFormSave = () => {\n    saveForm(containerFields);  // Pass the form data when saving\n  };\n\n\n  // Focus logic\n  useEffect(() => {\n    if (selectedField) {\n      const inputElement = inputRefs.current[selectedField.id];\n      if (inputElement) {\n        // Ensuring that we focus the input only if it's not already focused\n        if (document.activeElement !== inputElement) {\n          inputElement.focus();\n        }\n      }\n    }\n  }, [selectedField]); // Only trigger focus when selectedField changes\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    if (source.droppableId === \"fields\" && destination.droppableId === \"container\") {\n      const draggedField = fields[source.index];\n      const newField = {\n        ...draggedField,\n        id: `${draggedField.id}-${Date.now()}`,\n      };\n      setContainerFields((prev) => [...prev, newField]);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"container\") {\n      const reorderedFields = Array.from(containerFields);\n      const [moved] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, moved);\n      setContainerFields(reorderedFields);\n    } else if (source.droppableId === \"container\" && destination.droppableId === \"fields\") {\n      const updatedContainerFields = Array.from(containerFields);\n      updatedContainerFields.splice(source.index, 1);\n      setContainerFields(updatedContainerFields);\n\n      const removedField = containerFields[source.index];\n      if (selectedField && selectedField.id === removedField.id) {\n        setSelectedField(null);\n      }\n    }\n  };\n\n  const handleFieldUpdate = (id, key, value) => {\n    const updateFields = (fieldsList) =>\n      fieldsList.map((field) =>\n        field.id === id ? { ...field, [key]: key === \"required\" ? !field.required : value } : field\n      );\n\n    setFields(updateFields(fields));\n    setContainerFields(updateFields(containerFields));\n    setSelectedField((prev) => (prev?.id === id ? { ...prev, [key]: value } : prev));\n  };\n\n  const FieldEditor = ({ field }) => {\n    const [localField, setLocalField] = useState(field);\n\n    const handleLocalChange = (key, value) => {\n      setLocalField((prev) => ({ ...prev, [key]: value }));\n      handleFieldUpdate(field.id, key, value);\n    };\n\n    return (\n      <div style={{ border: \"1px solid #ddd\", padding: \"10px\", marginTop: \"10px\" }}>\n        <h4>Edit Field</h4>\n        <label>\n          Label:\n          <input\n            type=\"text\"\n            value={localField.label}\n            onChange={(e) => handleLocalChange(\"label\", e.target.value)}\n          />\n        </label>\n        <br />\n        {localField.type === \"text\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Max Length:\n              <input\n                type=\"number\"\n                value={localField.maxLength}\n                onChange={(e) => handleLocalChange(\"maxLength\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Min Length:\n              <input\n                type=\"number\"\n                value={localField.minLength}\n                onChange={(e) => handleLocalChange(\"minLength\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"textarea\" && (\n          <>\n            <label>\n              Placeholder:\n              <input\n                type=\"text\"\n                value={localField.placeholder}\n                onChange={(e) => handleLocalChange(\"placeholder\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Max Length:\n              <input\n                type=\"number\"\n                value={localField.maxLength}\n                onChange={(e) => handleLocalChange(\"maxLength\", e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Min Length:\n              <input\n                type=\"number\"\n                value={localField.minLength}\n                onChange={(e) => handleLocalChange(\"minLength\", e.target.value)}\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"select\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        {localField.type === \"radio\" && (\n          <>\n            <label>\n              Options (comma separated):\n              <input\n                type=\"text\"\n                value={localField.options.join(\", \")}\n                onChange={(e) =>\n                  handleLocalChange(\"options\", e.target.value.split(\",\").map((opt) => opt.trim()))\n                }\n              />\n            </label>\n            <br />\n          </>\n        )}\n        <label>\n          Required:\n          <input\n            type=\"checkbox\"\n            checked={localField.required}\n            onChange={() => handleLocalChange(\"required\", !localField.required)}\n          />\n        </label>\n      </div>\n    );\n  };\n\n  const FloatingLabelField = React.forwardRef(({ field, onClick }, ref) => {\n    return (\n      <div style={{ position: \"relative\", marginBottom: \"20px\" }}>\n        <input\n          ref={ref}\n          id={field.id}\n          type={field.type}\n          placeholder={field.placeholder}\n          required={field.required}\n          maxLength={field.maxLength}\n          minLength={field.minLength}\n          onClick={onClick}\n          className=\"input-field\"\n          style={{\n            padding: \"10px\",\n            width: \"100%\",\n            minWidth: \"200px\",\n            transition: \"all 0.2s\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            fontSize: \"16px\",\n          }}\n        />\n        <label\n          htmlFor={field.id}\n          style={{\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            fontSize: \"16px\",\n            transition: \"all 0.2s\",\n            transform: \"translateY(-20px)\",\n            pointerEvents: \"none\",\n            opacity: field.value || field.placeholder ? \"0.7\" : \"1\",\n          }}\n        >\n          {field.label}\n        </label>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h2>Form Builder</h2>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"fields\">\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              style={{ padding: \"10px\", backgroundColor: \"#f4f4f4\", borderRadius: \"5px\" }}\n            >\n              {fields.map((field, index) => (\n                <Draggable key={field.id} draggableId={field.id} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        ...provided.draggableProps.style,\n                        margin: \"10px 0\",\n                        padding: \"10px\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"5px\",\n                        border: \"1px solid #ddd\",\n                      }}\n                    >\n                      <div\n                        onClick={() => setSelectedField(field)}\n                        style={{ cursor: \"pointer\", marginBottom: \"10px\" }}\n                      >\n                        {field.label}\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        <Droppable droppableId=\"container\">\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              style={{ padding: \"10px\", backgroundColor: \"#e9e9e9\", borderRadius: \"5px\" }}\n            >\n              {containerFields.map((field, index) => (\n                <Draggable key={field.id} draggableId={field.id} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        ...provided.draggableProps.style,\n                        margin: \"10px 0\",\n                        padding: \"10px\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"5px\",\n                        border: \"1px solid #ddd\",\n                      }}\n                    >\n                      <FloatingLabelField\n                        ref={(ref) => {\n                          if (field.id === selectedField?.id) {\n                            inputRefs.current[field.id] = ref;\n                          }\n                        }}\n                        field={field}\n                        onClick={() => setSelectedField(field)}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      {selectedField && (\n        <FieldEditor field={selectedField} />\n      )}\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}