{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFields = [{\n  id: 'field-1',\n  label: 'First Name'\n}, {\n  id: 'field-2',\n  label: 'Email'\n}, {\n  id: 'field-3',\n  label: 'Date of Birth'\n}];\nconst FormBuilder = () => {\n  _s();\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n\n  // Handle drag and drop logic\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    // If dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    // Case 1: Field dropped into a container\n    if (destination.droppableId === 'droppable-container') {\n      const field = fields.find(f => f.id === draggableId);\n      if (!field) return;\n\n      // Add the field to the container if it's not already there\n      if (!containerFields.some(f => f.id === field.id)) {\n        setContainerFields([...containerFields, field]);\n      }\n      return;\n    }\n\n    // Case 2: Reorder the fields in the main list\n    const reorderedFields = Array.from(fields);\n    const [removed] = reorderedFields.splice(source.index, 1);\n    reorderedFields.splice(destination.index, 0, removed);\n    setFields(reorderedFields);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Form Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-fields\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            width: '300px',\n            border: '1px solid black',\n            padding: '20px'\n          },\n          children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: field.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                ...provided.draggableProps.style,\n                padding: '10px',\n                backgroundColor: '#f0f0f0',\n                border: '1px solid gray',\n                borderRadius: '5px'\n              },\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-container\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            marginTop: '20px',\n            border: '1px solid blue',\n            padding: '20px',\n            minHeight: '100px',\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Container Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), containerFields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: field.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                ...provided.draggableProps.style,\n                padding: '10px',\n                backgroundColor: '#d3e7ff',\n                border: '1px solid gray',\n                borderRadius: '5px'\n              },\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilder, \"mSsvOHeJxdc7luwQOvNZNfKX2Hg=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","initialFields","id","label","FormBuilder","_s","fields","setFields","containerFields","setContainerFields","onDragEnd","result","destination","source","draggableId","droppableId","field","find","f","some","reorderedFields","Array","from","removed","splice","index","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","provided","ref","innerRef","droppableProps","display","flexDirection","gap","width","border","map","draggableProps","dragHandleProps","backgroundColor","borderRadius","placeholder","marginTop","minHeight","_c","$RefreshReg$"],"sources":["/Users/jimmy/FormBuilder/Frontend/form_builder/src/form_builder.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\n\nconst initialFields = [\n  { id: 'field-1', label: 'First Name' },\n  { id: 'field-2', label: 'Email' },\n  { id: 'field-3', label: 'Date of Birth' },\n];\n\nconst FormBuilder = () => {\n  const [fields, setFields] = useState(initialFields);\n  const [containerFields, setContainerFields] = useState([]);\n\n  // Handle drag and drop logic\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    // If dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    // Case 1: Field dropped into a container\n    if (destination.droppableId === 'droppable-container') {\n      const field = fields.find(f => f.id === draggableId);\n      if (!field) return;\n\n      // Add the field to the container if it's not already there\n      if (!containerFields.some(f => f.id === field.id)) {\n        setContainerFields([...containerFields, field]);\n      }\n      return;\n    }\n\n    // Case 2: Reorder the fields in the main list\n    const reorderedFields = Array.from(fields);\n    const [removed] = reorderedFields.splice(source.index, 1);\n    reorderedFields.splice(destination.index, 0, removed);\n    setFields(reorderedFields);\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Form Builder</h1>\n\n      {/* Main Fields Area */}\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable-fields\">\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px',\n                width: '300px',\n                border: '1px solid black',\n                padding: '20px',\n              }}\n            >\n              {fields.map((field, index) => (\n                <Draggable key={field.id} draggableId={field.id} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        ...provided.draggableProps.style,\n                        padding: '10px',\n                        backgroundColor: '#f0f0f0',\n                        border: '1px solid gray',\n                        borderRadius: '5px',\n                      }}\n                    >\n                      {field.label}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n\n        {/* Container Fields Area */}\n        <Droppable droppableId=\"droppable-container\">\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              style={{\n                marginTop: '20px',\n                border: '1px solid blue',\n                padding: '20px',\n                minHeight: '100px',\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px',\n              }}\n            >\n              <h2>Container Field</h2>\n              {containerFields.map((field, index) => (\n                <Draggable key={field.id} draggableId={field.id} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        ...provided.draggableProps.style,\n                        padding: '10px',\n                        backgroundColor: '#d3e7ff',\n                        border: '1px solid gray',\n                        borderRadius: '5px',\n                      }}\n                    >\n                      {field.label}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}